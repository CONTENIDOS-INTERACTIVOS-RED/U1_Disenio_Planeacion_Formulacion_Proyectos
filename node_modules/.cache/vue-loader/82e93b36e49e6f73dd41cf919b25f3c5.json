{"remainingRequest":"/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/node_modules/pug-plain-loader/index.js!/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/src/views/curso/Tema3.vue?vue&type=template&id=2dcfaa9b&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/src/views/curso/Tema3.vue","mtime":1733717006740},{"path":"/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Disenio_Planeacion_Formulacion_Proyectos/U1_Disenio_Planeacion_Formulacion_Proyectos/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}